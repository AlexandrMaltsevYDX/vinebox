# Generated by Django 4.2.9 on 2024-01-27 20:59

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Город")),
            ],
            options={
                "verbose_name": "Город",
                "verbose_name_plural": "Города",
            },
        ),
        migrations.CreateModel(
            name="Coordinates",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "ydx_latitude",
                    models.FloatField(null=True, verbose_name="Широта(Яндекс)"),
                ),
                (
                    "ydx_longitude",
                    models.FloatField(null=True, verbose_name="Долгота(Яндекс)"),
                ),
            ],
            options={
                "verbose_name": "Координаты",
                "verbose_name_plural": "Координаты",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Страна")),
            ],
            options={
                "verbose_name": "Страна",
                "verbose_name_plural": "Страны",
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Район")),
            ],
            options={
                "verbose_name": "Район",
                "verbose_name_plural": "Районы",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Регион")),
            ],
            options={
                "verbose_name": "Регион",
                "verbose_name_plural": "Регионы",
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Заголовок")),
                (
                    "main_text",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Текст для заголовка на странице Услуги",
                    ),
                ),
                (
                    "secondary_text",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Текст описание в блоке УСЛУГИ",
                    ),
                ),
            ],
            options={
                "verbose_name": "Услуга",
                "verbose_name_plural": "Услуги",
            },
        ),
        migrations.CreateModel(
            name="Street",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Улица")),
            ],
            options={
                "verbose_name": "Улица",
                "verbose_name_plural": "Улицы",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Тег")),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
            },
        ),
        migrations.CreateModel(
            name="Place",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("house", models.PositiveIntegerField(null=True, verbose_name="Дом")),
                (
                    "flat",
                    models.PositiveIntegerField(null=True, verbose_name="Квартира"),
                ),
                (
                    "city",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.city",
                        verbose_name="Город",
                    ),
                ),
                (
                    "coordinates",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.coordinates",
                        verbose_name="Координаты",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.country",
                        verbose_name="Страна",
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.district",
                        verbose_name="Район",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.region",
                        verbose_name="Регион",
                    ),
                ),
                (
                    "street",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.street",
                        verbose_name="Улица",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="apps_reobjects.tag",
                        verbose_name="Тег",
                    ),
                ),
            ],
            options={
                "verbose_name": "Место",
                "verbose_name_plural": "Места",
            },
        ),
    ]
